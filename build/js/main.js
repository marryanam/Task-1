$(window).on("load",function(){$("body").fadeIn(1e3),new Swiper(".swiper-container",{effect:"fade",grabCursor:!1,centeredSlides:!0,slidesPerView:1,loop:!1,spaceBetween:109,fadeEffect:{crossFade:!0},pagination:{el:".swiper-pagination",clickable:!0}}).on("slideChange",function(){var e=this.activeIndex+1;$(".count").text("0"+e)})}),$(document).ready(function(){var t,n,a;$(".tab__item").each(function(){var e=$(".tab__img_i"),t=$(this).data("img");function n(){TweenLite.from(e,2,{ease:Power1.easeOut,opacity:0}),TweenLite.to(e,2,{ease:Power1.easeOut,opacity:1}),TweenLite.set(e,{attr:{src:t}},{ease:Power1.easeOut,opacity:1})}$(this).on("mouseenter",function(){setTimeout(n,200)})}),TweenLite.to(".circle_2",2,{ease:Power1.easeOut,scale:1}),TweenLite.to(".circle_5",2,{ease:Power1.easeOut,delay:2,scale:1}),$(".header__i").on("click",function(){$(this).toggleClass("active"),$(this).next().toggleClass("opened")}),window.matchMedia("(min-width: 600px)").matches&&(t=window.pageYOffset,window.onscroll=function(){var e=window.pageYOffset;document.getElementById("info").style.display=document.getElementById("adress").style.display=e<=t?(document.getElementById("headerScroll").classList.remove("scrolled"),"block"):(document.getElementById("headerScroll").classList.add("scrolled"),"none"),t=e},function(){TweenLite.set("#wrap",{perspective:600}),TweenLite.set("#wrap img",{xPercent:"-50%",yPercent:"-50%"});var e=document.getElementById("wrap"),t=window.innerWidth,n=window.innerHeight;for(i=0;i<6;i++){var a=document.createElement("div");TweenLite.set(a,{attr:{class:"leaf"},x:s(0,t),y:s(-200,-150),z:s(-200,200)}),e.appendChild(a),o=a,TweenMax.to(o,s(6,15),{y:n+100,ease:Linear.easeNone,repeat:-1,delay:-15}),TweenMax.to(o,s(4,8),{x:"+=100",rotationZ:s(0,180),repeat:-1,yoyo:!0,ease:Sine.easeInOut}),TweenMax.to(o,s(2,8),{rotationX:s(0,360),rotationY:s(0,360),repeat:-1,yoyo:!0,ease:Sine.easeInOut,delay:-5})}var o;function s(e,t){return e+Math.random()*(t-e)}}()),$("ul.tabs li").click(function(){var e=$(this).attr("data-tab");$("ul.tabs li").removeClass("current"),$(".tab__content").removeClass("current"),$(this).addClass("current"),$("#"+e).addClass("current")}),$(".popup-btn").click(function(e){var t=$(this).data("target"),n=$(".popup");$(".overlay").fadeIn(),$(t).toggleClass("active"),$("html,\nbody").css("overflow-y","hidden"),n.not(t).removeClass("active");var a=!0;$(document).bind("click.myEvent",function(e){var t=e.target;a||0!==$(e.target).closest(n).length||$(t).hasClass("popup_btn")||($(n).removeClass("active"),$(".overlay").fadeOut(),$(document).unbind("click.myEvent"),$("html,\nbody").css("overflow-y","visible")),a=!1}),$(".close").click(function(e){$(n).removeClass("active"),$(".overlay").hide(),$(document).unbind("click.myEvent"),$("html,\nbody").css("overflow-y","visible")})}),$(".form button").on("click",function(){$(".popup__content").hide(),$(".popup__gratitude").fadeIn("slow")}),$("input[type='tel']").bind("input blur focus click",function(e){var t=e.target,n="+__(___)-___-__-__",a=0,o=n.replace(/\D/g,""),i=t.value.replace(/\D/g,"");o.length>=i.length&&(i=o),t.value=n.replace(/./g,function(e){return/[_\d]/.test(e)&&a<i.length?i.charAt(a++):a>=i.length?"":e}),"blur"===e.type?2===t.value.length&&(t.value=""):function(e,t){if(t.focus(),t.setSelectionRange)t.setSelectionRange(e,e);else if(t.createTextRange){var n=t.createTextRange();n.collapse(!0),n.moveEnd("character",e),n.moveStart("character",e),n.select()}}(t.value.length,t)}),n=$(".js_st"),(a=$(window)).on("scroll resize",function(){var e=a.height(),o=a.scrollTop(),i=o+e;$.each(n,function(){var e=$(this),t=e.outerHeight(),n=e.offset().top,a=n+t;o<=a&&n<=i?e.addClass("in-view"):e.removeClass("in-view")})}),a.trigger("scroll")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
